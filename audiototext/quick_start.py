#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∞—É–¥–∏–æ –≤ —Ç–µ–∫—Å—Ç
–ü—Ä–æ—Å—Ç–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
"""

import os
import sys
from pathlib import Path

def main():
    print("üéµ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å –∞—É–¥–∏–æ –≤ —Ç–µ–∫—Å—Ç - –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    if len(sys.argv) > 1:
        audio_file = sys.argv[1]
        model_size = sys.argv[2] if len(sys.argv) > 2 else "base"
    else:
        # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
        print("\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º:")
        print("1. –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å")
        print("3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
        
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-3): ").strip()
        
        if choice == "1":
            audio_file = input("–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –∞—É–¥–∏–æ—Ñ–∞–π–ª—É: ").strip()
            if not audio_file:
                print("‚ùå –§–∞–π–ª –Ω–µ —É–∫–∞–∑–∞–Ω")
                return
            
            print("\n–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å:")
            print("1. Tiny (–±—ã—Å—Ç—Ä–æ, –º–µ–Ω–µ–µ —Ç–æ—á–Ω–æ)")
            print("2. Base (–±–∞–ª–∞–Ω—Å) - –†–ï–ö–û–ú–ï–ù–î–£–ï–¢–°–Ø")
            print("3. Small (–±–æ–ª–µ–µ —Ç–æ—á–Ω–æ)")
            print("4. Medium (–æ—á–µ–Ω—å —Ç–æ—á–Ω–æ)")
            print("5. Large (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å)")
            
            model_choice = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-5): ").strip()
            model_map = {"1": "tiny", "2": "base", "3": "small", "4": "medium", "5": "large"}
            model_size = model_map.get(model_choice, "base")
            
        elif choice == "2":
            print("\nüöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å...")
            print("–û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ http://localhost:5000")
            os.system("python app.py")
            return
            
        elif choice == "3":
            print("\nüì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...")
            os.system("pip install -r requirements.txt")
            print("‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
            return
            
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
            return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    if not os.path.exists(audio_file):
        print(f"‚ùå –§–∞–π–ª {audio_file} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    print(f"\nüìÅ –§–∞–π–ª: {audio_file}")
    print(f"ü§ñ –ú–æ–¥–µ–ª—å: {model_size}")
    print("\n‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º...")
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä
    try:
        from audio_to_text import transcribe_audio, save_transcription
        
        # –¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä—É–µ–º
        result = transcribe_audio(audio_file, model_size)
        
        if result:
            print("\n‚úÖ –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
            print("\nüìù –†–µ–∑—É–ª—å—Ç–∞—Ç:")
            print("-" * 40)
            print(result)
            print("-" * 40)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            audio_path = Path(audio_file)
            output_file = f"{audio_path.stem}_transcription.txt"
            save_transcription(result, output_file)
            
            print(f"\nüíæ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: {output_file}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞")
            
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:")
        print("pip install -r requirements.txt")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()
